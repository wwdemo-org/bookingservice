apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: bookingservice
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: booking-deployment
    spec:
      containers:
      - name: bookingservice-java
        image: bookingservice-java:latest
        ports:
          - containerPort: 9080
        imagePullPolicy: IfNotPresent
        env:
        - name: MONGO_HOST
          value: booking-db
        - name: TRACK_REWARD_MILES
          value: 'false'
        - name: SECURE_SERVICE_CALLS
          value: 'true'
---
apiVersion: v1
kind: Service
metadata:
  name: booking-service
  namespace: default
spec:
  ports:
    - port: 9080
  selector:
    name: booking-deployment
---
##### Booking Database  #####
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    service: booking-db
  name: booking-db
spec:
  ports:
  - name: "27017"
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    service: booking-db
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: booking-db
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: booking-db
    spec:
      containers:
      - image: mongo
        name: booking-db
        ports:
        - containerPort: 27017
          protocol: TCP
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/ssl-redirect: "false"
  name: booking-ingress
spec:
  rules:
  - host:
    http:
      paths:
      - path: /booking
        backend:
          serviceName: booking-service
          servicePort: 9080
